services:
  reverse-proxy:
    image: traefik:v3.3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - emush_rag

  app:
    build:
      context: .
    labels:
      - "traefik.http.routers.app.rule=Host(`askneron.localhost`)"
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ./emush_rag
          target: /app
          ignore:
            - .venv/
    env_file:
      - .env
    depends_on:
      - vector_store
      - jaeger
    networks:
      - emush_rag
    extra_hosts:
      - host.docker.internal:host-gateway

  vector_store:
    image: chromadb/chroma:1.0.15
    ports:
    - mode: ingress
      target: 8000
      protocol: tcp
    volumes:
    - ./chroma:/data
    restart: always
    networks:
      - emush_rag

  jaeger:
    image: jaegertracing/all-in-one:1.71.0
    ports:
      - 4317:4317
      - 4318:4318
      - 9411:9411
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - emush_rag
    restart: always

  grafana:
    build:
      context: grafana
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    env_file:
      - .env
    depends_on:
      - jaeger
    networks:
      - emush_rag
    restart: always

networks:
  emush_rag:
    driver: bridge

volumes:
  grafana-data:
